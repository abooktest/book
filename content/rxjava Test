
# 생각할 점
1. rxjava 에 대한 내용이 되어야만 할 텐데, 최신 trend는 android code의 경우 kotlin을 기반으로 설명하는 것이기 때문에, kotlin 문법을 기반으로 rxjava의 내용을 설명할지, 아니면 java를 기반으로 설명할지에 대한 결정이 필요하다. 
2. rxjava의 경우에는 어떤 방향으로 내용을 작성할지에 대해서 감을 잡기 위해서, 전반적인 지식을 습득하고, 기존 강좌나 자료들을 모두 review할 필요가 있다. 


# 참고자료 검토 내용
1. [RxJava 유닛 테스트를 좀 더 쉽게 할 수 있는 틈새 찾기]
  - kotlin과 java 와의 사이에서 결정 필요. 
  - CountDownLatch 의 정확한 의미와 용법 파악 필요. 
  - Awaitibility는 kotlin의 속성으로 Java에서는 어떻게 접근할지 고려 필요. 
  - RxAndroid보다는 RxJava를 사용할 수 있도록 module 구조를 설계하도록 한다. 이를 통해, android dependency없이 JUnit기반의 test가 가능하도록 module design을 하도록 한다. 
  - RxJava는 비동기 수행을 통해 진행되므로, JUnit상에서 테스트를 위해서 필요한 scheduler의 설정과 관리에 대해서 중점적으로 설명할 필요가 있다. 

2. [Unit Testing asynchronous RxJava code (in Kotlin)]
  - 




[RxJava 유닛 테스트를 좀 더 쉽게 할 수 있는 틈새 찾기]: https://medium.com/@jungil.han/junit-rxjava-%EA%B7%B8%EB%A6%AC%EA%B3%A0-%EC%BB%B4%ED%8C%A8%EB%8B%88%EC%96%B8-%EC%98%A4%EB%B8%8C%EC%A0%9D%ED%8A%B8-e8d17b674bdd
[Unit Testing asynchronous RxJava code (in Kotlin)]: https://medium.com/@PaulinaSadowska/writing-unit-tests-on-asynchronous-events-with-rxjava-and-rxkotlin-1616a27f69aa
- https://beomseok95.tistory.com/72
- https://www.baeldung.com/rxjava-testing
- https://proandroiddev.com/rxjava-2-unit-testing-tips-207887d3f15c
- https://bonoogi.postype.com/post/3514910
- https://stackoverflow.com/questions/46549405/testing-asynchronous-rxjava-code-android


